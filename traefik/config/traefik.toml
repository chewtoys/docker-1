################################################################
# Global configuration
################################################################

# Enable debug mode
#
# Optional
# Default: false
#
debug = true

watch = true

# Log level
#
# Optional
# Default: "ERROR"
#
logLevel = "DEBUG"

# Entrypoints to be used by frontends that do not specify any entrypoint.
# Each frontend can specify its own entrypoints.
#
# Optional
# Default: ["http"]
#
defaultEntryPoints = ["http"]

################################################################
# Entrypoints configuration
################################################################

# Entrypoints definition
#
# Optional
# Default:
[entryPoints]
   [entryPoints.http]
   address = ":80"
   compress = true

################################################################
# Traefik logs configuration
################################################################

# Traefik logs
# Enabled by default and log to stdout
#
# Optional
#
# [traefikLog]

# Sets the filepath for the traefik log. If not specified, stdout will be used.
# Intermediate directories are created if necessary.
#
# Optional
# Default: os.Stdout
#
filePath = "log/traefik.log"

# Format is either "json" or "common".
#
# Optional
# Default: "common"
#
format = "common"

################################################################
# Access logs configuration
################################################################

# Enable access logs
# By default it will write to stdout and produce logs in the textual
# Common Log Format (CLF), extended with additional fields.
#
# Optional
#
# [accessLog]

# Sets the file path for the access log. If not specified, stdout will be used.
# Intermediate directories are created if necessary.
#
# Optional
# Default: os.Stdout
#
# filePath = "/path/to/log/log.txt"

# Format is either "json" or "common".
#
# Optional
# Default: "common"
#
# format = "common"

################################################################
# API and dashboard configuration
################################################################

# Enable API and dashboard
[api]

  # Name of the related entry point
  #
  # Optional
  # Default: "traefik"
  #
  # entryPoint = "traefik"

  # Enabled Dashboard
  #
  # Optional
  # Default: true
  #
dashboard = true

################################################################
# Ping configuration
################################################################

# Enable ping
[ping]

  # Name of the related entry point
  #
  # Optional
  # Default: "traefik"
  #
  entryPoint = "traefik"

################################################################
# Docker configuration backend
################################################################

# Enable Docker configuration backend
[docker]

watch = true

# Docker server endpoint. Can be a tcp or a unix socket endpoint.
#
# Required
# Default: "unix:///var/run/docker.sock"
#
# endpoint = "tcp://10.10.10.10:2375"

# Default domain used.
# Can be overridden by setting the "traefik.domain" label on a container.
#
# Optional
# Default: ""
#
domain = "ellesmera.com"

# Expose containers by default in traefik
#
# Optional
# Default: true
#
exposedbydefault = true

###### custom settings 

# Frontend definition
[frontends]

  [frontends.portal2]
  backend = "portal2"
  passHostHeader = true
  passTLSCert = true
  priority = 10
    [frontends.portal2.routes.test_1]
      rule = "Host:portal2.ellesmera.com"

  [frontends.admin2]
  backend = "admin2"
  passHostHeader = true
  passTLSCert = true
  priority = 10
    [frontends.admin2.routes.test_1]
      rule = "Host:admin2.ellesmera.com,Host:whoami.ellesmera.com"


# Backend definition
[backends]

  [backends.admin2]
    [backends.admin2.LoadBalancer]
    sticky = false
    method = "drr"
    [backends.admin2.servers.server1]
    url = "http://admin2"
    weight = 10
    [backends.admin2.servers.server2]
    url = "http://whoami"
    weight = 10
    [backends.admin2.servers.server3]
    url = "http://portal2"
    weight = 8

################################################################
# Consul KV configuration backend
################################################################

# Enable Consul KV configuration backend.
[consul]

# Consul server endpoint.
#
# Required
# Default: "127.0.0.1:8500"
#
endpoint = "consul_server:8500"

# Enable watch Consul changes.
#
# Optional
# Default: true
#
watch = true

# Prefix used for KV store.
#
# Optional
# Default: traefik
#
prefix = "traefik"

################################################################
# Consul Catalog configuration backend
################################################################

# Enable Consul Catalog configuration backend.
[consulCatalog]

watch = true

# Consul server endpoint.
#
# Required
# Default: "127.0.0.1:8500"
#
endpoint = "consul_server:8500"

# Expose Consul catalog services by default in Traefik.
#
# Optional
# Default: true
#
exposedByDefault = false

# Default domain used.
#
# Optional
#
domain = "ellesmera.com"

# Prefix for Consul catalog tags.
#
# Optional
# Default: "traefik"
#
prefix = "traefik"

# Default frontEnd Rule for Consul services.
#
# The format is a Go Template with:
# - ".ServiceName", ".Domain" and ".Attributes" available
# - "getTag(name, tags, defaultValue)", "hasTag(name, tags)" and "getAttribute(name, tags, defaultValue)" functions are available
# - "getAttribute(...)" function uses prefixed tag names based on "prefix" value
#
# Optional
# Default: "Host:{{.ServiceName}}.{{.Domain}}"
#
frontEndRule = "Host:{{.ServiceName}}.{{.Domain}}"