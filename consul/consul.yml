version: '3.5'

services:

  client:
    image: consul
    environment:
      SERVICE_NAME: client
    command: "agent -retry-join server-bootstrap -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"
    depends_on:
      - server-bootstrap
    deploy:
      replicas: 2
    networks:
      - docker2docker

  server:
    image: consul
    environment:
      SERVICE_NAME: server
    command: "agent -server -retry-join server-bootstrap -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"
    volumes:
      - consul:/consul/data
      # - ./server_config/config.json:/consul/config/config.json:rw
    depends_on:
      - server-bootstrap
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 1G
    networks:
      - docker2docker
      
  server-bootstrap:
    image: consul
    environment:
      SERVICE_NAME: bootstrap
      CONSUL_UI_BETA: "true"
    ports:
      - "8500:8500"
    command: "agent -server -bootstrap-expect 3 -ui -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"
    networks:
      - docker2docker

  registrator:
    image: gliderlabs/registrator:latest
    command: -resync 5 -internal -deregister always -cleanup consul://server:8500

    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock"
    depends_on:
      - server
    deploy:
      mode: global
      restart_policy:
        condition: any
        delay: 5s
    networks:
      - docker2docker

volumes:
  consul: 
    external: true

networks:
    docker2docker:
        external: true