version: '3.6'

services:

  client:
    image: consul:latest
    labels:
      - "SERVICE_IGNORE=true"        
      - "traefik.enable=false"
    command: "agent -retry-join server_bootstrap"
    depends_on:
      - server_bootstrap
    volumes:
      - "./client_config/config.json:/consul/config/config.json:rw"
    deploy:
      replicas: 2
    networks:
      - docker2docker

  server:
    image: consul:latest
    labels:
      - "SERVICE_IGNORE=true"        
      - "traefik.enable=false"
    command: "agent -server -retry-join server_bootstrap"
    depends_on:
      - server_bootstrap
    volumes:
      - "./server_config/config.json:/consul/config/config.json:rw"
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 30s
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
      resources:
        limits:
          memory: 1G
    networks:
      - docker2docker
      
  server_bootstrap:
    image: consul:latest
    environment:
      CONSUL_UI_BETA: "true"
    labels:
      - "SERVICE_IGNORE=true"          
      - "traefik.enable=false"
    ports:
      - "8500:8500"
    command: "agent -server -bootstrap-expect 3 -ui -client 0.0.0.0 -bind '{{ GetInterfaceIP \"eth0\" }}'"
    networks:
      - docker2docker

  registrator:
    image: gliderlabs/registrator:latest
    labels:
      - "SERVICE_IGNORE=true"
      - "traefik.enable=false"
    command: -resync="5" -deregister="always" -internal -cleanup="true" consul://server_bootstrap:8500
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock"
    depends_on:
      - server_bootstrap
    deploy:
      mode: global
      restart_policy:
        condition: any
        delay: 5s
    networks:
      - docker2docker

volumes:
  consul: 
    external: true

networks:
    docker2docker:
        external: true