version: '3.6'

services:

  adminer:
    image: adminer
    restart: always

    # metadata to registrator
    environment:
        SERVICE_NAME: adminer
        SERVICE_TAGS: dbs,admin

    # Deployment information
    deploy:
        replicas: 1
        update_config:
            parallelism: 2
            delay: 10s
        restart_policy:
            condition: on-failure
        endpoint_mode: vip
        labels:
            com.example.description: "Adminer Database"

    #     # Resource limits 
    #     resources:
    #         limits:
    #             cpus: '1.0'
    #             memory: 2.0G
    #         reservations:
    #             cpus: '0.50'
    #             memory: 500M

    ports:
      - 8008:8080
    networks:
      - docker2docker

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
# metadata to registrator
      SERVICE_NAME: mysql
      SERVICE_TAGS: dbs,mysql

    # Deployment information
    deploy:
        replicas: 1
        update_config:
            parallelism: 2
            delay: 10s
        restart_policy:
            condition: on-failure
        endpoint_mode: vip
        labels:
            com.example.description: "MySQL Database"

        # Resource limits 
        resources:
            limits:
                cpus: '1.0'
                memory: 2.0G
            reservations:
                cpus: '0.50'
                memory: 500M

    volumes:
      - "mysqld:/var/lib/mysql"
    ports:
      - 3306:3306
    networks:
      - docker2docker

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      PGDATA: /database
      
    # metadata to registrator
      SERVICE_NAME: postgresql
      SERVICE_TAGS: dbs,postgresql
      
    # Deployment information
    deploy:
        replicas: 1
        update_config:
            parallelism: 2
            delay: 10s
        restart_policy:
            condition: on-failure
        endpoint_mode: vip
        labels:
            com.example.description: "PostgreSQL Database"

    #     # Resource limits 
    #     resources:
    #         limits:
    #             cpus: '1.0'
    #             memory: 2.0G
    #         reservations:
    #             cpus: '0.50'
    #             memory: 500M

    volumes:
      - "postgresql:/var/lib/postgresql/data"
    ports:
      - 5432:5432
    networks:
      - docker2docker

      
networks:
    docker2docker:
        external: true
    
volumes:
  postgresql:
    external: true

  mysqld:
    external: true
